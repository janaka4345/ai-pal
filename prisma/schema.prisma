// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  password      String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  tierId         String?    @db.ObjectId
  Payments       Payments[]
  tier           Tier?      @relation(fields: [tierId], references: [id])
  tokenRemaining Int        @default(200)
  tokensExpireAt DateTime?
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique @default(cuid()) @db.String
  expires DateTime

  @@unique([email, token])
}

model Tier {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Int
  tokens      Int
  User        User[]
}

model Payments {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  amount      Int
  mesthod     String
  createdAt   DateTime @default(now())
  description String

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}
